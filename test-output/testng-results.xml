<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<br><img src='screenshots/invalidLoginVerify.png' height='200' width='300'/><br>]]>
    </line>
  </reporter-output>
  <suite started-at="2023-08-26T14:18:03 IST" name="Capstone1Suite" finished-at="2023-08-26T14:18:25 IST" duration-ms="21945">
    <groups>
    </groups>
    <test started-at="2023-08-26T14:18:03 IST" name="TestCode" finished-at="2023-08-26T14:18:25 IST" duration-ms="21945">
      <class name="JavaAuto.Capstone1.testCodeCopy">
        <test-method is-config="true" signature="driverSetup(java.lang.String)[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:01 IST" name="driverSetup" finished-at="2023-08-26T14:18:03 IST" duration-ms="1500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverSetup -->
        <test-method signature="titleVerify1()[pri:1, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:03 IST" name="titleVerify1" finished-at="2023-08-26T14:18:07 IST" duration-ms="4015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleVerify1 -->
        <test-method is-config="true" signature="ssMethod(org.testng.ITestResult)[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:07 IST" name="ssMethod" finished-at="2023-08-26T14:18:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=titleVerify1 status=SUCCESS method=testCodeCopy.titleVerify1()[pri:1, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssMethod -->
        <test-method signature="validLoginVerify(java.lang.String,java.lang.String)[pri:2, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:07 IST" name="validLoginVerify" finished-at="2023-08-26T14:18:13 IST" duration-ms="6256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginVerify -->
        <test-method is-config="true" signature="ssMethod(org.testng.ITestResult)[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:13 IST" name="ssMethod" finished-at="2023-08-26T14:18:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginVerify status=SUCCESS method=testCodeCopy.validLoginVerify(java.lang.String,java.lang.String)[pri:2, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssMethod -->
        <test-method signature="titleVerify2()[pri:3, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:13 IST" name="titleVerify2" finished-at="2023-08-26T14:18:15 IST" duration-ms="2069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleVerify2 -->
        <test-method is-config="true" signature="ssMethod(org.testng.ITestResult)[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:15 IST" name="ssMethod" finished-at="2023-08-26T14:18:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=titleVerify2 status=SUCCESS method=testCodeCopy.titleVerify2()[pri:3, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssMethod -->
        <test-method signature="invalidLoginVerify(java.lang.String,java.lang.String)[pri:4, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:15 IST" name="invalidLoginVerify" finished-at="2023-08-26T14:18:25 IST" duration-ms="9472" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_Invaliduser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_Invalidpwd]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.className: error-message (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.111, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\MRIDUL\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57684}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57684/devtoo..., se:cdpVersion: 116.0.5845.111, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6a9e9eb722d7a876a7bab878306ccb67]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.className: error-message (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.111, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\MRIDUL\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57684}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57684/devtoo..., se:cdpVersion: 116.0.5845.111, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6a9e9eb722d7a876a7bab878306ccb67
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at JavaAuto.Capstone1.testCodeCopy.invalidLoginVerify(testCodeCopy.java:101)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginVerify -->
        <test-method is-config="true" signature="ssMethod(org.testng.ITestResult)[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:25 IST" name="ssMethod" finished-at="2023-08-26T14:18:25 IST" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginVerify status=FAILURE method=testCodeCopy.invalidLoginVerify(java.lang.String,java.lang.String)[pri:4, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br><img src='screenshots/invalidLoginVerify.png' height='200' width='300'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- ssMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:JavaAuto.Capstone1.testCodeCopy@776aec5c]" started-at="2023-08-26T14:18:25 IST" name="afterSuite" finished-at="2023-08-26T14:18:25 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- JavaAuto.Capstone1.testCodeCopy -->
    </test> <!-- TestCode -->
  </suite> <!-- Capstone1Suite -->
</testng-results>
